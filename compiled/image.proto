syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.neuralink.interviewing";

// A single image which might be grayscale, or color.
//
// Color is based of the OpenCV Mat definitions for
// channel/color combinations, such as CV_8U
// https://docs.opencv.org/3.4/d1/d1b/group__core__hal__interface.html
//
// When color == true, this is a color image.  In
// this case, the data is 3 channel rgb with the rgb
// triplets stored row-wise.
message NLImage {
    int32 color = 1;
    bytes data = 2;
    int32 width = 3;
    int32 height = 4;
}

// A request to rotate an image by some multiple of 90 degrees.
//
// The input image may be color or black and white.
//
// Positive rotations are counter clockwise.
message NLImageRotateRequest {
    enum Rotation {
        NONE = 0;
        NINETY_DEG = 1;
        ONE_EIGHTY_DEG = 2;
        TWO_SEVENTY_DEG = 3;
    }

    Rotation rotation = 1;
    NLImage image = 2;
}

// A request for your custom ImageService endpoint.  Feel free to
// add other messages and fields, but at least one field must be
// an image.
message NLCustomImageEndpointRequest {
    NLImage image = 1;
}

message NLBlurImageEndpointRequest {
    NLImage image = 1;
    int32 kernel = 2;
}

// Your response.  Feel free to replace this with NLImage or whatever
// you'd like.
message NLCustomImageEndpointResponse {
    NLImage image = 1;
}

service NLImageService {
    rpc RotateImage(NLImageRotateRequest) returns (NLImage);
    rpc CustomImageEndpoint(NLCustomImageEndpointRequest) returns (NLCustomImageEndpointResponse);
    rpc MedianBlurFilter(NLBlurImageEndpointRequest) returns (NLImage);
}
